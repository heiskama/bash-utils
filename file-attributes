#!/bin/bash

# This script can be used to take a backup of file permissions and ownership a restore them later

# Find files recursively from the current dir and save their attributes to a file. The format of the file is:
#
# Permissions(octal) Permissions UserID GroupID Username Groupname Filename
#
# For example:
#
# 777 drwxrwxrwx 1000 1000 ubuntu ubuntu .
# 755 drwxr-xr-x 1000 1000 ubuntu ubuntu ./subdir
# 644 -rw-r--r-- 1000 1000 ubuntu ubuntu ./subdir/myscript.sh
# 666 -rw-rw-rw- 1000 1000 ubuntu ubuntu ./hello world.txt
function file-attibutes-save() {
  find . | xargs -i sh -c "stat --format=\"%a %A %u %g %U %G %n\" \"{}\"" > "$1"
}

# Restore file permissions and ownerships from a backup file
function file-attibutes-restore() {
  cat "$1" | while read i; do
    MODE=$(echo "$i" | cut -d " " -f 1)
    USER=$(echo "$i" | cut -d " " -f 3)
    GROUP=$(echo "$i" | cut -d " " -f 4)
    FILENAME=$(echo "$i" | cut -d " " -f 7-)
    chmod -v "$MODE" "$FILENAME"
    chown -v "$USER":"$GROUP" "$FILENAME"
  done
}

# The case of no input parameters or empty input
if [[ $# -eq 0 ]] || [[ -z $@ ]]; then
  NAME=$0
  echo "This script can be used to take a backup of file permissions and ownership a restore them later"
  echo "Usage: ${NAME##*/} (--save-to|--restore-from) filename"
  exit 0
fi


# Correct number of parameters
if [[ $# -eq 2 ]]; then
  if [[ "$1" == "--save-to" ]]; then
    file-attibutes-save "$2"
  elif [[ "$1" == "--restore-from" ]]; then
    file-attibutes-restore "$2"
  else
    echo "Error in parameters."
  fi

  unset -f file-attibutes-restore
  unset -f file-attibutes-save
fi
